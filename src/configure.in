#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.
# 
# Description: configure.in
#   Autonconf produce a ./configure from this file
#   that's used to discover various programs/dependencies
#   usage: autoconf
#
# Authors: winter.yang
# License: GPL Version 2
# System: Linux
#    
# Copyright (c) 2004 All rights reserved.
#
# Last change:
# This file is released under GPL, refer to docs/README for details
#
# This file is adapted to replace the old ./configure script
# therefor it includes parts of that script

##############################################################################
# Section 1                                                                  #
# Autoconf initialisation                                                    #
##############################################################################

AC_PREREQ(2.53)
AC_INIT(FakeCNC,m4_normalize(esyscmd([cat ../VERSION])),fake-developers@fake.fake)
AC_CONFIG_SRCDIR(emc/motion/motion.c)

# macro BUILD_TOPLEVEL
AC_MSG_CHECKING(build toplevel)
BUILD_TOPLEVEL="$(cd ..; pwd -P)"
AC_MSG_RESULT($BUILD_TOPLEVEL)

# macro RUN_IN_PLACE
AC_MSG_CHECKING(installation prefix)
if test "x$prefix" = "xNONE"; then
  RUN_IN_PLACE=yes
  AC_MSG_RESULT(run in place)
  prefix=${BUILD_TOPLEVEL}
else
  RUN_IN_PLACE=no
  AC_MSG_RESULT($prefix)
fi

EMC2_HOME=${prefix}
EMC2_BIN_DIR=${prefix}/bin
EMC2_FAKEBIN_DIR=${prefix}/fakebin
EMC2_TCL_DIR=${prefix}/lib/tcltk/linuxcnc
EMC2_HELP_DIR=${prefix}/share/doc/linuxcnc
EMC2_RTLIB_DIR=$EMC2_HOME/rtlib
LINUXCNC_CONFIG_PATH="~/confcnc/configs:$EMC2_HOME/configs"
EMC2_NCFILES_DIR=$EMC2_HOME/nc_files
REALTIME=$EMC2_HOME/scripts/realtime
EMC2_IMAGE_DIR=$EMC2_HOME
EMC2_TCL_LIB_DIR=$EMC2_HOME/tcl
HALLIB_DIR=$EMC2_HOME/lib/hallib
#WISH=$EMC2_HOME/fakebin/wish
PYTHON_HEAD="/usr/include/python2.7"
GL_HEAD="/usr/include"
TCL_HEAD="/usr/include/tcl8.5"
DEFAULT_NMLFILE=$EMC_HOME/configs/common/linuxcnc.nml

AC_DEFINE_UNQUOTED([PRELOAD_WORKAROUND], "$PRELOAD_WORKAROUND", [library pathname to LD_PRELOAD])


AC_SUBST([EMC2_HOME])
AC_SUBST([EMC2_BIN_DIR])
AC_SUBST([EMC2_FAKEBIN_DIR])
AC_SUBST([EMC2_TCL_DIR])
AC_SUBST([EMC2_HELP_DIR])
AC_SUBST([EMC2_RTLIB_DIR])
AC_SUBST([EMC2_RTLIB_DIR])
AC_SUBST([LINUXCNC_CONFIG_PATH])
AC_SUBST([EMC2_NCFILES_DIR])
AC_SUBST([REALTIME])
AC_SUBST([EMC2_IMAGE_DIR])
AC_SUBST([EMC2_TCL_LIB_DIR])
AC_SUBST([HALLIB_DIR])
AC_SUBST([PRELOAD_WORKAROUND])
AC_SUBST([PYTHON_HEAD])
AC_SUBST([GL_HEAD])
AC_SUBST([TCL_HEAD])
AC_DEFINE_UNQUOTED([EMC2_DEFAULT_NMLFILE], "$DEFAULT_NMLFILE", [Default nml file])

#AC_SUBST([WISH])
##############################################################################
# Subsection 3.6 - check for utility programs needed to build and run EMC    #
#                                                                            #
# Check for all the utility programs we need to build and install emc        #
# as well as those we use in the emc scripts...                              #
##############################################################################
SPATH=$PATH:/usr/local/sbin:/usr/sbin:/sbin
AC_PROG_CXX
AC_PROG_CC

m4_include([m4/ax_cxx_compile_stdcxx_11.m4])
# make this optional - it will likely only result in warnings
AX_CXX_COMPILE_STDCXX_11(noext,optional)

AC_PROG_MAKE_SET
AC_PROG_RANLIB
AC_PATH_PROG(AR,ar)
AC_PATH_PROG(INSTALL, install)

AC_PATH_PROG(SED, sed, "none")
if test $SED = "none"
then
    AC_MSG_ERROR([sed not found])
fi

AC_PATH_PROG(PS, ps, "none")
if test $PS = "none"
then
    AC_MSG_ERROR([ps not found])
fi

AC_PATH_PROG(KILL, kill, "none")
if test $KILL = "none"
then
    AC_MSG_ERROR([kill not found])
fi

AC_PATH_PROG(WHOAMI, whoami, "none")
if test $WHOAMI = "none"
then
    AC_MSG_ERROR([whoami not found])
fi

AC_PATH_PROG(AWK, awk, "none")
if test $AWK = "none"
then
    AC_MSG_ERROR([awk not found])
fi

AC_PATH_PROG(INSMOD, insmod, "none", $SPATH)
if test $INSMOD = "none"
then
    AC_MSG_ERROR([insmod not found])
fi

AC_PATH_PROG(RMMOD, rmmod, "none", $SPATH)
if test $RMMOD = "none"
then
    AC_MSG_ERROR([rmmod not found])
fi

AC_PATH_PROG(LSMOD, lsmod, "none", $SPATH)
if test $LSMOD = "none"
then
    AC_MSG_ERROR([lsmod not found])
fi

AC_PATH_PROG(PIDOF, pidof, "none", $SPATH)
if test $PIDOF = "none"
then
    AC_MSG_ERROR([pidof not found])
fi

AC_PATH_PROG(IPCS, ipcs, "none")
if test $IPCS = "none"
then
    AC_MSG_ERROR([ipcs not found])
fi

AC_PATH_PROG(FUSER, fuser, "none", $SPATH)
if test $FUSER = "none"
then
    AC_MSG_ERROR([fuser not found])
fi

KERNEL_VERS="test"

AC_MSG_RESULT([$KERNEL_VERS])
AC_SUBST([KERNEL_VERS])

##############################################################################
# Section Ex - fake support                                                  #
##############################################################################

if test -f $EMC2_FAKEBIN_DIR/wish; then
    WISH=$EMC2_FAKEBIN_DIR/wish
fi

AC_SUBST([WISH])

##############################################################################
# Section 7 - Language support                                               #
##############################################################################

PRELOAD_WORKAROUND=`../scripts/test-libgl-bug.sh 2>/dev/null`
if test  $? -ne 0 ; then
   # real bad, the test failed - let me know
   AC_MSG_RESULT([test for libgl1-mesa-dri workaround failed, please file a bug])
   exit 1
fi
if test "x$PRELOAD_WORKAROUND" != "x" ; then
   AC_MSG_RESULT(required - need to preload $PRELOAD_WORKAROUND)
else
   AC_MSG_RESULT(not required)
fi

AH_TOP([
#ifndef EMC2_CONFIG_H
#define EMC2_CONFIG_H

#define LINELEN 255


#endif
])
##############################################################################
# files that get created by ./configure                                      #
##############################################################################
AC_CONFIG_FILES(Makefile.inc)
AC_CONFIG_FILES(Makefile.modinc)
AC_CONFIG_HEADER(config.h)
AC_CONFIG_FILES([../scripts/linuxcnc], [chmod +x ../scripts/linuxcnc])
AC_CONFIG_FILES([../scripts/realtime], [chmod +x ../scripts/realtime])
AC_CONFIG_FILES([../scripts/haltcl], [chmod +x ../scripts/haltcl])
AC_OUTPUT()
